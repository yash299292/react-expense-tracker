{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/node_modules/victory-vendor/lib-vendor/d3-format/src/formatGroup.js"],"names":["Object","defineProperty","exports","value","default","_default","grouping","thousands","width","i","length","t","j","g","Math","max","push","substring","reverse","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;;AAEA,SAASA,QAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuC;AACrC,SAAO,UAAUJ,KAAV,EAAiBK,KAAjB,EAAwB;AAC7B,QAAIC,CAAC,GAAGN,KAAK,CAACO,MAAd;AAAA,QACIC,CAAC,GAAG,EADR;AAAA,QAEIC,CAAC,GAAG,CAFR;AAAA,QAGIC,CAAC,GAAGP,QAAQ,CAAC,CAAD,CAHhB;AAAA,QAIII,MAAM,GAAG,CAJb;;AAMA,WAAOD,CAAC,GAAG,CAAJ,IAASI,CAAC,GAAG,CAApB,EAAuB;AACrB,UAAIH,MAAM,GAAGG,CAAT,GAAa,CAAb,GAAiBL,KAArB,EAA4BK,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYP,KAAK,GAAGE,MAApB,CAAJ;AAC5BC,MAAAA,CAAC,CAACK,IAAF,CAAOb,KAAK,CAACc,SAAN,CAAgBR,CAAC,IAAII,CAArB,EAAwBJ,CAAC,GAAGI,CAA5B,CAAP;AACA,UAAI,CAACH,MAAM,IAAIG,CAAC,GAAG,CAAf,IAAoBL,KAAxB,EAA+B;AAC/BK,MAAAA,CAAC,GAAGP,QAAQ,CAACM,CAAC,GAAG,CAACA,CAAC,GAAG,CAAL,IAAUN,QAAQ,CAACI,MAAxB,CAAZ;AACD;;AAED,WAAOC,CAAC,CAACO,OAAF,GAAYC,IAAZ,CAAiBZ,SAAjB,CAAP;AACD,GAfD;AAgBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction _default(grouping, thousands) {\n  return function (value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}"]},"metadata":{},"sourceType":"script"}