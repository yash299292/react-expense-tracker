{"ast":null,"code":"var _jsxFileName = \"/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/TransactionsComponent.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 100%;\n  gap: 10px;\n  font-weight: bold;\n  overflow-y: auto !important;\n  & input {\n    padding: 10px 12px;\n    border-radius: 12px;\n    background: #e6e8e9;\n    border: 1px solid #e6e8e9;\n    outline: none;\n  }\n`;\n_c = Container;\nconst Cell = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: row;\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 2px;\n  border: 1px solid #e6e8e9;\n  align-items: center;\n  font-weight: normal;\n  justify-content: space-between;\n  border-right: 4px solid ${props => props.isExpense ? \"red\" : \"green\"};\n`;\n_c2 = Cell;\n\nconst TransactionCell = props => {\n  var _props$payload, _props$payload2, _props$payload3, _props$payload4, _props$payload5;\n\n  console.log(\"Timestamp:\", (_props$payload = props.payload) === null || _props$payload === void 0 ? void 0 : _props$payload.timestamp);\n  return /*#__PURE__*/_jsxDEV(Cell, {\n    isExpense: ((_props$payload2 = props.payload) === null || _props$payload2 === void 0 ? void 0 : _props$payload2.type) === \"EXPENSE\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: (_props$payload3 = props.payload) === null || _props$payload3 === void 0 ? void 0 : _props$payload3.desc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"$\", (_props$payload4 = props.payload) === null || _props$payload4 === void 0 ? void 0 : _props$payload4.amount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: new Date(Number((_props$payload5 = props.payload) === null || _props$payload5 === void 0 ? void 0 : _props$payload5.timestamp)).toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_c3 = TransactionCell;\n\nconst TransactionsComponent = props => {\n  _s();\n\n  const [searchText, updateSearchText] = useState(\"\");\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\n\n  const filterData = searchText => {\n    if (!searchText || !searchText.trim().length) {\n      updateTxn(props.transactions);\n      return;\n    }\n\n    let txn = [...props.transactions];\n    txn = txn.filter(payload => payload.desc.toLowerCase().includes(searchText.toLowerCase().trim()));\n    updateTxn(txn);\n  };\n\n  useEffect(() => {\n    filterData(searchText);\n  }, [props.transactions]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [\"Transactions\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Search\",\n      onChange: e => {\n        updateSearchText(e.target.value);\n        filterData(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), filteredTransaction === null || filteredTransaction === void 0 ? void 0 : filteredTransaction.map(payload => /*#__PURE__*/_jsxDEV(TransactionCell, {\n      payload: payload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TransactionsComponent, \"PjofenJ4s7DExlxtmxp+1Hj8fsc=\");\n\n_c4 = TransactionsComponent;\nexport default TransactionsComponent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Cell\");\n$RefreshReg$(_c3, \"TransactionCell\");\n$RefreshReg$(_c4, \"TransactionsComponent\");","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/TransactionsComponent.js"],"names":["styled","React","useEffect","useState","Container","div","Cell","props","isExpense","TransactionCell","console","log","payload","timestamp","type","desc","amount","Date","Number","toLocaleString","TransactionsComponent","searchText","updateSearchText","filteredTransaction","updateTxn","transactions","filterData","trim","length","txn","filter","toLowerCase","includes","e","target","value","map"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\nimport React, { useEffect, useState } from \"react\";\n\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 100%;\n  gap: 10px;\n  font-weight: bold;\n  overflow-y: auto !important;\n  & input {\n    padding: 10px 12px;\n    border-radius: 12px;\n    background: #e6e8e9;\n    border: 1px solid #e6e8e9;\n    outline: none;\n  }\n`;\nconst Cell = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: row;\n  padding: 10px 15px;\n  font-size: 14px;\n  border-radius: 2px;\n  border: 1px solid #e6e8e9;\n  align-items: center;\n  font-weight: normal;\n  justify-content: space-between;\n  border-right: 4px solid ${(props) => (props.isExpense ? \"red\" : \"green\")};\n`;\nconst TransactionCell = (props) => {\n  console.log(\"Timestamp:\", props.payload?.timestamp);\n  return (\n      <Cell isExpense={props.payload?.type === \"EXPENSE\"}>\n          <span>{props.payload?.desc}</span>\n          <span>${props.payload?.amount}</span>\n          <span>{new Date(Number(props.payload?.timestamp)).toLocaleString()}</span>\n      </Cell>\n  );\n};\nconst TransactionsComponent = (props) => {\n  const [searchText, updateSearchText] = useState(\"\");\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\n\n  const filterData = (searchText) => {\n    if (!searchText || !searchText.trim().length) {\n      updateTxn(props.transactions);\n      return;\n    }\n    let txn = [...props.transactions];\n    txn = txn.filter((payload) =>\n      payload.desc.toLowerCase().includes(searchText.toLowerCase().trim()),\n    );\n    updateTxn(txn);\n  };\n\n  useEffect(() => {\n    filterData(searchText);\n  }, [props.transactions]);\n\n  return (\n    <Container>\n      Transactions\n      <input\n        placeholder=\"Search\"\n        onChange={(e) => {\n          updateSearchText(e.target.value);\n          filterData(e.target.value);\n        }}\n      />\n      {filteredTransaction?.map((payload) => (\n        <TransactionCell payload={payload} />\n      ))}\n    </Container>\n  );\n};\nexport default TransactionsComponent;"]},"metadata":{},"sourceType":"module"}