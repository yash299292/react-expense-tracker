{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copy = copy;\nexports.default = continuous;\nexports.identity = identity;\nexports.transformer = transformer;\n\nvar _index = require(\"../../../lib-vendor/d3-array/src/index.js\");\n\nvar _index2 = require(\"../../../lib-vendor/d3-interpolate/src/index.js\");\n\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\n\nvar _number = _interopRequireDefault(require(\"./number.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = (0, _index.bisect)(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = _index2.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous() {\n  return transformer()(identity, identity);\n}","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/node_modules/victory-vendor/lib-vendor/d3-scale/src/continuous.js"],"names":["Object","defineProperty","exports","value","copy","default","continuous","identity","transformer","_index","require","_index2","_constant","_interopRequireDefault","_number","obj","__esModule","unit","x","normalize","a","b","isNaN","NaN","clamper","t","Math","max","min","bimap","domain","range","interpolate","d0","d1","r0","r1","polymap","j","length","d","Array","r","i","slice","reverse","bisect","source","target","clamp","unknown","transform","untransform","piecewise","output","input","rescale","n","scale","map","invert","y","interpolateNumber","_","arguments","from","rangeRound","interpolateRound","u"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,IAAR,GAAeA,IAAf;AACAF,OAAO,CAACG,OAAR,GAAkBC,UAAlB;AACAJ,OAAO,CAACK,QAAR,GAAmBA,QAAnB;AACAL,OAAO,CAACM,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,2CAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,iDAAD,CAArB;;AAEA,IAAIE,SAAS,GAAGC,sBAAsB,CAACH,OAAO,CAAC,eAAD,CAAR,CAAtC;;AAEA,IAAII,OAAO,GAAGD,sBAAsB,CAACH,OAAO,CAAC,aAAD,CAAR,CAApC;;AAEA,SAASG,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEV,IAAAA,OAAO,EAAEU;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,IAAI,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAX;;AAEA,SAASV,QAAT,CAAkBW,CAAlB,EAAqB;AACnB,SAAOA,CAAP;AACD;;AAED,SAASC,SAAT,CAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAO,CAACA,CAAC,IAAID,CAAC,GAAG,CAACA,CAAX,IAAgB,UAAUF,CAAV,EAAa;AAClC,WAAO,CAACA,CAAC,GAAGE,CAAL,IAAUC,CAAjB;AACD,GAFM,GAEH,CAAC,GAAGT,SAAS,CAACP,OAAd,EAAuBiB,KAAK,CAACD,CAAD,CAAL,GAAWE,GAAX,GAAiB,GAAxC,CAFJ;AAGD;;AAED,SAASC,OAAT,CAAiBJ,CAAjB,EAAoBC,CAApB,EAAuB;AACrB,MAAII,CAAJ;AACA,MAAIL,CAAC,GAAGC,CAAR,EAAWI,CAAC,GAAGL,CAAJ,EAAOA,CAAC,GAAGC,CAAX,EAAcA,CAAC,GAAGI,CAAlB;AACX,SAAO,UAAUP,CAAV,EAAa;AAClB,WAAOQ,IAAI,CAACC,GAAL,CAASP,CAAT,EAAYM,IAAI,CAACE,GAAL,CAASP,CAAT,EAAYH,CAAZ,CAAZ,CAAP;AACD,GAFD;AAGD,C,CAAC;AACF;;;AAGA,SAASW,KAAT,CAAeC,MAAf,EAAuBC,KAAvB,EAA8BC,WAA9B,EAA2C;AACzC,MAAIC,EAAE,GAAGH,MAAM,CAAC,CAAD,CAAf;AAAA,MACII,EAAE,GAAGJ,MAAM,CAAC,CAAD,CADf;AAAA,MAEIK,EAAE,GAAGJ,KAAK,CAAC,CAAD,CAFd;AAAA,MAGIK,EAAE,GAAGL,KAAK,CAAC,CAAD,CAHd;AAIA,MAAIG,EAAE,GAAGD,EAAT,EAAaA,EAAE,GAAGd,SAAS,CAACe,EAAD,EAAKD,EAAL,CAAd,EAAwBE,EAAE,GAAGH,WAAW,CAACI,EAAD,EAAKD,EAAL,CAAxC,CAAb,KAAmEF,EAAE,GAAGd,SAAS,CAACc,EAAD,EAAKC,EAAL,CAAd,EAAwBC,EAAE,GAAGH,WAAW,CAACG,EAAD,EAAKC,EAAL,CAAxC;AACnE,SAAO,UAAUlB,CAAV,EAAa;AAClB,WAAOiB,EAAE,CAACF,EAAE,CAACf,CAAD,CAAH,CAAT;AACD,GAFD;AAGD;;AAED,SAASmB,OAAT,CAAiBP,MAAjB,EAAyBC,KAAzB,EAAgCC,WAAhC,EAA6C;AAC3C,MAAIM,CAAC,GAAGZ,IAAI,CAACE,GAAL,CAASE,MAAM,CAACS,MAAhB,EAAwBR,KAAK,CAACQ,MAA9B,IAAwC,CAAhD;AAAA,MACIC,CAAC,GAAG,IAAIC,KAAJ,CAAUH,CAAV,CADR;AAAA,MAEII,CAAC,GAAG,IAAID,KAAJ,CAAUH,CAAV,CAFR;AAAA,MAGIK,CAAC,GAAG,CAAC,CAHT,CAD2C,CAI/B;;AAEZ,MAAIb,MAAM,CAACQ,CAAD,CAAN,GAAYR,MAAM,CAAC,CAAD,CAAtB,EAA2B;AACzBA,IAAAA,MAAM,GAAGA,MAAM,CAACc,KAAP,GAAeC,OAAf,EAAT;AACAd,IAAAA,KAAK,GAAGA,KAAK,CAACa,KAAN,GAAcC,OAAd,EAAR;AACD;;AAED,SAAO,EAAEF,CAAF,GAAML,CAAb,EAAgB;AACdE,IAAAA,CAAC,CAACG,CAAD,CAAD,GAAOxB,SAAS,CAACW,MAAM,CAACa,CAAD,CAAP,EAAYb,MAAM,CAACa,CAAC,GAAG,CAAL,CAAlB,CAAhB;AACAD,IAAAA,CAAC,CAACC,CAAD,CAAD,GAAOX,WAAW,CAACD,KAAK,CAACY,CAAD,CAAN,EAAWZ,KAAK,CAACY,CAAC,GAAG,CAAL,CAAhB,CAAlB;AACD;;AAED,SAAO,UAAUzB,CAAV,EAAa;AAClB,QAAIyB,CAAC,GAAG,CAAC,GAAGlC,MAAM,CAACqC,MAAX,EAAmBhB,MAAnB,EAA2BZ,CAA3B,EAA8B,CAA9B,EAAiCoB,CAAjC,IAAsC,CAA9C;AACA,WAAOI,CAAC,CAACC,CAAD,CAAD,CAAKH,CAAC,CAACG,CAAD,CAAD,CAAKzB,CAAL,CAAL,CAAP;AACD,GAHD;AAID;;AAED,SAASd,IAAT,CAAc2C,MAAd,EAAsBC,MAAtB,EAA8B;AAC5B,SAAOA,MAAM,CAAClB,MAAP,CAAciB,MAAM,CAACjB,MAAP,EAAd,EAA+BC,KAA/B,CAAqCgB,MAAM,CAAChB,KAAP,EAArC,EAAqDC,WAArD,CAAiEe,MAAM,CAACf,WAAP,EAAjE,EAAuFiB,KAAvF,CAA6FF,MAAM,CAACE,KAAP,EAA7F,EAA6GC,OAA7G,CAAqHH,MAAM,CAACG,OAAP,EAArH,CAAP;AACD;;AAED,SAAS1C,WAAT,GAAuB;AACrB,MAAIsB,MAAM,GAAGb,IAAb;AAAA,MACIc,KAAK,GAAGd,IADZ;AAAA,MAEIe,WAAW,GAAGrB,OAAO,CAACqB,WAF1B;AAAA,MAGImB,SAHJ;AAAA,MAIIC,WAJJ;AAAA,MAKIF,OALJ;AAAA,MAMID,KAAK,GAAG1C,QANZ;AAAA,MAOI8C,SAPJ;AAAA,MAQIC,MARJ;AAAA,MASIC,KATJ;;AAWA,WAASC,OAAT,GAAmB;AACjB,QAAIC,CAAC,GAAG/B,IAAI,CAACE,GAAL,CAASE,MAAM,CAACS,MAAhB,EAAwBR,KAAK,CAACQ,MAA9B,CAAR;AACA,QAAIU,KAAK,KAAK1C,QAAd,EAAwB0C,KAAK,GAAGzB,OAAO,CAACM,MAAM,CAAC,CAAD,CAAP,EAAYA,MAAM,CAAC2B,CAAC,GAAG,CAAL,CAAlB,CAAf;AACxBJ,IAAAA,SAAS,GAAGI,CAAC,GAAG,CAAJ,GAAQpB,OAAR,GAAkBR,KAA9B;AACAyB,IAAAA,MAAM,GAAGC,KAAK,GAAG,IAAjB;AACA,WAAOG,KAAP;AACD;;AAED,WAASA,KAAT,CAAexC,CAAf,EAAkB;AAChB,WAAOA,CAAC,IAAI,IAAL,IAAaI,KAAK,CAACJ,CAAC,GAAG,CAACA,CAAN,CAAlB,GAA6BgC,OAA7B,GAAuC,CAACI,MAAM,KAAKA,MAAM,GAAGD,SAAS,CAACvB,MAAM,CAAC6B,GAAP,CAAWR,SAAX,CAAD,EAAwBpB,KAAxB,EAA+BC,WAA/B,CAAvB,CAAP,EAA4EmB,SAAS,CAACF,KAAK,CAAC/B,CAAD,CAAN,CAArF,CAA9C;AACD;;AAEDwC,EAAAA,KAAK,CAACE,MAAN,GAAe,UAAUC,CAAV,EAAa;AAC1B,WAAOZ,KAAK,CAACG,WAAW,CAAC,CAACG,KAAK,KAAKA,KAAK,GAAGF,SAAS,CAACtB,KAAD,EAAQD,MAAM,CAAC6B,GAAP,CAAWR,SAAX,CAAR,EAA+BxC,OAAO,CAACmD,iBAAvC,CAAtB,CAAN,EAAwFD,CAAxF,CAAD,CAAZ,CAAZ;AACD,GAFD;;AAIAH,EAAAA,KAAK,CAAC5B,MAAN,GAAe,UAAUiC,CAAV,EAAa;AAC1B,WAAOC,SAAS,CAACzB,MAAV,IAAoBT,MAAM,GAAGW,KAAK,CAACwB,IAAN,CAAWF,CAAX,EAAcjD,OAAO,CAACT,OAAtB,CAAT,EAAyCmD,OAAO,EAApE,IAA0E1B,MAAM,CAACc,KAAP,EAAjF;AACD,GAFD;;AAIAc,EAAAA,KAAK,CAAC3B,KAAN,GAAc,UAAUgC,CAAV,EAAa;AACzB,WAAOC,SAAS,CAACzB,MAAV,IAAoBR,KAAK,GAAGU,KAAK,CAACwB,IAAN,CAAWF,CAAX,CAAR,EAAuBP,OAAO,EAAlD,IAAwDzB,KAAK,CAACa,KAAN,EAA/D;AACD,GAFD;;AAIAc,EAAAA,KAAK,CAACQ,UAAN,GAAmB,UAAUH,CAAV,EAAa;AAC9B,WAAOhC,KAAK,GAAGU,KAAK,CAACwB,IAAN,CAAWF,CAAX,CAAR,EAAuB/B,WAAW,GAAGrB,OAAO,CAACwD,gBAA7C,EAA+DX,OAAO,EAA7E;AACD,GAFD;;AAIAE,EAAAA,KAAK,CAACT,KAAN,GAAc,UAAUc,CAAV,EAAa;AACzB,WAAOC,SAAS,CAACzB,MAAV,IAAoBU,KAAK,GAAGc,CAAC,GAAG,IAAH,GAAUxD,QAAnB,EAA6BiD,OAAO,EAAxD,IAA8DP,KAAK,KAAK1C,QAA/E;AACD,GAFD;;AAIAmD,EAAAA,KAAK,CAAC1B,WAAN,GAAoB,UAAU+B,CAAV,EAAa;AAC/B,WAAOC,SAAS,CAACzB,MAAV,IAAoBP,WAAW,GAAG+B,CAAd,EAAiBP,OAAO,EAA5C,IAAkDxB,WAAzD;AACD,GAFD;;AAIA0B,EAAAA,KAAK,CAACR,OAAN,GAAgB,UAAUa,CAAV,EAAa;AAC3B,WAAOC,SAAS,CAACzB,MAAV,IAAoBW,OAAO,GAAGa,CAAV,EAAaL,KAAjC,IAA0CR,OAAjD;AACD,GAFD;;AAIA,SAAO,UAAUzB,CAAV,EAAa2C,CAAb,EAAgB;AACrBjB,IAAAA,SAAS,GAAG1B,CAAZ,EAAe2B,WAAW,GAAGgB,CAA7B;AACA,WAAOZ,OAAO,EAAd;AACD,GAHD;AAID;;AAED,SAASlD,UAAT,GAAsB;AACpB,SAAOE,WAAW,GAAGD,QAAH,EAAaA,QAAb,CAAlB;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.copy = copy;\nexports.default = continuous;\nexports.identity = identity;\nexports.transformer = transformer;\n\nvar _index = require(\"../../../lib-vendor/d3-array/src/index.js\");\n\nvar _index2 = require(\"../../../lib-vendor/d3-interpolate/src/index.js\");\n\nvar _constant = _interopRequireDefault(require(\"./constant.js\"));\n\nvar _number = _interopRequireDefault(require(\"./number.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar unit = [0, 1];\n\nfunction identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= a = +a) ? function (x) {\n    return (x - a) / b;\n  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(a, b) {\n  var t;\n  if (a > b) t = a, a = b, b = t;\n  return function (x) {\n    return Math.max(a, Math.min(b, x));\n  };\n} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\n\n\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0],\n      d1 = domain[1],\n      r0 = range[0],\n      r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function (x) {\n    return r0(d0(x));\n  };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1; // Reverse descending domains.\n\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function (x) {\n    var i = (0, _index.bisect)(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());\n}\n\nfunction transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = _index2.interpolate,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    var n = Math.min(domain.length, range.length);\n    if (clamp !== identity) clamp = clamper(domain[0], domain[n - 1]);\n    piecewise = n > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return x == null || isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function (y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _index2.interpolateNumber)))(y)));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? (domain = Array.from(_, _number.default), rescale()) : domain.slice();\n  };\n\n  scale.range = function (_) {\n    return arguments.length ? (range = Array.from(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function (_) {\n    return range = Array.from(_), interpolate = _index2.interpolateRound, rescale();\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = _ ? true : identity, rescale()) : clamp !== identity;\n  };\n\n  scale.interpolate = function (_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function (_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function (t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nfunction continuous() {\n  return transformer()(identity, identity);\n}"]},"metadata":{},"sourceType":"script"}