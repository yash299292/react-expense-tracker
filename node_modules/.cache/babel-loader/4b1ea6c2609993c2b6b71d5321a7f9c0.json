{"ast":null,"code":"var _jsxFileName = \"/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport MyPieChart from \"./Components\"; // Import the PieChart component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c = Container;\n\nconst HomeComponent = props => {\n  _s();\n\n  const [transactions, updateTransaction] = useState([]);\n  const [expense, updateExpense] = useState(0);\n  const [income, updateIncome] = useState(0);\n  const calculateBalance = useCallback(() => {\n    let exp = 0;\n    let inc = 0;\n    transactions.forEach(payload => payload.type === \"EXPENSE\" ? exp = exp + payload.amount : inc = inc + payload.amount);\n    updateExpense(exp);\n    updateIncome(inc);\n  }, [transactions]);\n  useEffect(() => {\n    calculateBalance();\n  }, [transactions, calculateBalance]);\n\n  const addTransaction = payload => {\n    const transactionArray = [...transactions];\n    const now = new Date(); // get the current date and time\n\n    payload.date = now.toLocaleDateString(); // add date to payload\n\n    payload.time = now.toLocaleTimeString(); // add time to payload\n\n    transactionArray.push(payload);\n    updateTransaction(transactionArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(OverViewComponent, {\n      expense: expense,\n      income: income,\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), (transactions === null || transactions === void 0 ? void 0 : transactions.length) ? /*#__PURE__*/_jsxDEV(TransactionsComponent, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Income and Expense Pie Charts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-around\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MyPieChart, {\n          data: [{\n            name: \"Income\",\n            value: income\n          }, {\n            name: \"Expense\",\n            value: expense\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(HomeComponent, \"09NG2+T63VQ63g1bNR7V56MXxKE=\");\n\n_c2 = HomeComponent;\nexport default HomeComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"HomeComponent\");","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js"],"names":["React","useEffect","useState","useCallback","styled","OverViewComponent","TransactionsComponent","MyPieChart","Container","div","HomeComponent","props","transactions","updateTransaction","expense","updateExpense","income","updateIncome","calculateBalance","exp","inc","forEach","payload","type","amount","addTransaction","transactionArray","now","Date","date","toLocaleDateString","time","toLocaleTimeString","push","length","display","justifyContent","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport MyPieChart from \"./Components\"; // Import the PieChart component\n\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HomeComponent = (props) => {\n    const [transactions, updateTransaction] = useState([]);\n    const [expense, updateExpense] = useState(0);\n    const [income, updateIncome] = useState(0);\n  \n    const calculateBalance = useCallback(() => {\n      let exp = 0;\n      let inc = 0;\n      transactions.forEach((payload) =>\n        payload.type === \"EXPENSE\"\n          ? (exp = exp + payload.amount)\n          : (inc = inc + payload.amount),\n      );\n      updateExpense(exp);\n      updateIncome(inc);\n    }, [transactions]);\n  \n    useEffect(() => {\n      calculateBalance();\n    }, [transactions, calculateBalance]);\n  \n    const addTransaction = (payload) => {\n      const transactionArray = [...transactions];\n      const now = new Date(); // get the current date and time\n      payload.date = now.toLocaleDateString(); // add date to payload\n      payload.time = now.toLocaleTimeString(); // add time to payload\n      transactionArray.push(payload);\n      updateTransaction(transactionArray);\n    };\n  \n    return (\n      <Container>\n        <OverViewComponent\n          expense={expense}\n          income={income}\n          addTransaction={addTransaction}\n        />\n        {transactions?.length ? (\n          <TransactionsComponent transactions={transactions} />\n        ) : (\n          \"\"\n        )}\n        <div>\n          <h2>Income and Expense Pie Charts</h2>\n          <div style={{ display: \"flex\", justifyContent: \"space-around\" }}>\n          <MyPieChart data={[\n  { name: \"Income\", value: income },\n  { name: \"Expense\", value: expense }\n]} />\n          </div>\n        </div>\n      </Container>\n    );\n  };\n  \n  export default HomeComponent;"]},"metadata":{},"sourceType":"module"}