{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = intersection;\n\nvar _index = require(\"../../../lib-vendor/internmap/src/index.js\");\n\nfunction intersection(values, ...others) {\n  values = new _index.InternSet(values);\n  others = others.map(set);\n\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof _index.InternSet ? values : new _index.InternSet(values);\n}","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/node_modules/victory-vendor/lib-vendor/d3-array/src/intersection.js"],"names":["Object","defineProperty","exports","value","default","intersection","_index","require","values","others","InternSet","map","set","out","other","has","delete"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,4CAAD,CAApB;;AAEA,SAASF,YAAT,CAAsBG,MAAtB,EAA8B,GAAGC,MAAjC,EAAyC;AACvCD,EAAAA,MAAM,GAAG,IAAIF,MAAM,CAACI,SAAX,CAAqBF,MAArB,CAAT;AACAC,EAAAA,MAAM,GAAGA,MAAM,CAACE,GAAP,CAAWC,GAAX,CAAT;;AAEAC,EAAAA,GAAG,EAAE,KAAK,MAAMV,KAAX,IAAoBK,MAApB,EAA4B;AAC/B,SAAK,MAAMM,KAAX,IAAoBL,MAApB,EAA4B;AAC1B,UAAI,CAACK,KAAK,CAACC,GAAN,CAAUZ,KAAV,CAAL,EAAuB;AACrBK,QAAAA,MAAM,CAACQ,MAAP,CAAcb,KAAd;AACA,iBAASU,GAAT;AACD;AACF;AACF;;AAED,SAAOL,MAAP;AACD;;AAED,SAASI,GAAT,CAAaJ,MAAb,EAAqB;AACnB,SAAOA,MAAM,YAAYF,MAAM,CAACI,SAAzB,GAAqCF,MAArC,GAA8C,IAAIF,MAAM,CAACI,SAAX,CAAqBF,MAArB,CAArD;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = intersection;\n\nvar _index = require(\"../../../lib-vendor/internmap/src/index.js\");\n\nfunction intersection(values, ...others) {\n  values = new _index.InternSet(values);\n  others = others.map(set);\n\n  out: for (const value of values) {\n    for (const other of others) {\n      if (!other.has(value)) {\n        values.delete(value);\n        continue out;\n      }\n    }\n  }\n\n  return values;\n}\n\nfunction set(values) {\n  return values instanceof _index.InternSet ? values : new _index.InternSet(values);\n}"]},"metadata":{},"sourceType":"script"}