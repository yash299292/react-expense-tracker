{"ast":null,"code":"var _jsxFileName = \"/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c = Container;\n\nconst HomeComponent = props => {\n  _s();\n\n  const [transactions, updateTransaction] = useState([]);\n  const [expense, updateExpense] = useState(0);\n  const [income, updateIncome] = useState(0);\n  const [chartData, setChartData] = useState({});\n\n  const calculateBalance = () => {\n    let exp = 0;\n    let inc = 0;\n    transactions.forEach(payload => payload.type === \"EXPENSE\" ? exp = exp + payload.amount : inc = inc + payload.amount);\n    updateExpense(exp);\n    updateIncome(inc);\n  };\n\n  useEffect(() => {\n    calculateBalance();\n    updateChartData();\n  }, [transactions]);\n\n  const updateChartData = () => {\n    setChartData({\n      labels: [\"Expense\", \"Income\"],\n      datasets: [{\n        data: [expense, income],\n        backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n        hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"]\n      }]\n    });\n  };\n\n  const addTransaction = payload => {\n    const transactionArray = [...transactions];\n    const now = new Date(); // get the current date and time\n\n    payload.date = now.toLocaleDateString(); // add date to payload\n\n    payload.time = now.toLocaleTimeString(); // add time to payload\n\n    transactionArray.push(payload);\n    updateTransaction(transactionArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(OverViewComponent, {\n      expense: expense,\n      income: income,\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), (transactions === null || transactions === void 0 ? void 0 : transactions.length) ? /*#__PURE__*/_jsxDEV(TransactionsComponent, {\n      transactions: transactions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeComponent, \"N4r2XiWsyUXvXdDPy3jr+r7VMok=\");\n\n_c2 = HomeComponent;\nexport default HomeComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"HomeComponent\");","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js"],"names":["React","useEffect","useState","styled","OverViewComponent","TransactionsComponent","Doughnut","Container","div","HomeComponent","props","transactions","updateTransaction","expense","updateExpense","income","updateIncome","chartData","setChartData","calculateBalance","exp","inc","forEach","payload","type","amount","updateChartData","labels","datasets","data","backgroundColor","hoverBackgroundColor","addTransaction","transactionArray","now","Date","date","toLocaleDateString","time","toLocaleTimeString","push","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst HomeComponent = (props) => {\n  const [transactions, updateTransaction] = useState([]);\n  const [expense, updateExpense] = useState(0);\n  const [income, updateIncome] = useState(0);\n  const [chartData, setChartData] = useState({});\n\n  const calculateBalance = () => {\n    let exp = 0;\n    let inc = 0;\n    transactions.forEach((payload) =>\n      payload.type === \"EXPENSE\"\n        ? (exp = exp + payload.amount)\n        : (inc = inc + payload.amount)\n    );\n    updateExpense(exp);\n    updateIncome(inc);\n  };\n\n  useEffect(() => {\n    calculateBalance();\n    updateChartData();\n  }, [transactions]);\n\n  const updateChartData = () => {\n    setChartData({\n      labels: [\"Expense\", \"Income\"],\n      datasets: [\n        {\n          data: [expense, income],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\"],\n          hoverBackgroundColor: [\"#FF6384\", \"#36A2EB\"],\n        },\n      ],\n    });\n  };\n\n  const addTransaction = (payload) => {\n    const transactionArray = [...transactions];\n    const now = new Date(); // get the current date and time\n    payload.date = now.toLocaleDateString(); // add date to payload\n    payload.time = now.toLocaleTimeString(); // add time to payload\n    transactionArray.push(payload);\n    updateTransaction(transactionArray);\n  };\n\n  return (\n    <Container>\n      <OverViewComponent\n        expense={expense}\n        income={income}\n        addTransaction={addTransaction}\n      />\n      {transactions?.length ? (\n        <TransactionsComponent transactions={transactions} />\n      ) : (\n        \"\"\n      )}\n      <Doughnut data={chartData} />\n    </Container>\n  );\n};\nexport default HomeComponent;\n"]},"metadata":{},"sourceType":"module"}