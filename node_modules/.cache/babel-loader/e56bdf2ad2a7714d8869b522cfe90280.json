{"ast":null,"code":"var _jsxFileName = \"/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport MyPieChart from \"./Components\"; // Import the PieChart component\n\nimport TransactionsChart from \"./TransactionsChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n_c = Container;\nconst ChartContainer = styled.div`\n  margin-top: 20px;\n  width: 100%;\n`;\n_c2 = ChartContainer;\n\nconst HomeComponent = props => {\n  _s();\n\n  const [transactions, updateTransaction] = useState([]);\n  const [expense, updateExpense] = useState(0);\n  const [income, updateIncome] = useState(0);\n  const [setSelectedTransaction] = useState(null);\n  const calculateBalance = useCallback(() => {\n    let exp = 0;\n    let inc = 0;\n    transactions.forEach(payload => payload.type === \"EXPENSE\" ? exp = exp + payload.amount : inc = inc + payload.amount);\n    updateExpense(exp);\n    updateIncome(inc);\n  }, [transactions]);\n  useEffect(() => {\n    calculateBalance();\n  }, [transactions, calculateBalance]);\n\n  const addTransaction = payload => {\n    const transactionArray = [...transactions];\n    const now = new Date();\n    payload.date = now.toLocaleDateString();\n    payload.time = now.toLocaleTimeString();\n    transactionArray.push(payload);\n    updateTransaction(transactionArray);\n  };\n\n  const expenseTransactions = transactions.filter(transaction => transaction.type === \"EXPENSE\");\n\n  const handleDeleteTransaction = transactionId => {\n    // Filter out the transaction with the given id\n    const updatedTransactions = transactions.filter(transaction => transaction.id !== transactionId); // Update the state with the new transactions\n\n    updateTransaction(updatedTransactions);\n  };\n\n  const handleEditTransaction = transaction => {\n    // Set the selected transaction for editing\n    setSelectedTransaction(transaction);\n  };\n\n  const handleSaveEdit = editedTransaction => {\n    // Find the index of the edited transaction\n    const index = transactions.findIndex(transaction => transaction.id === editedTransaction.id); // Update the transactions array with the edited transaction\n\n    const updatedTransactions = [...transactions];\n    updatedTransactions[index] = editedTransaction; // Update the state with the new transactions and reset selectedTransaction\n\n    updateTransaction(updatedTransactions);\n    setSelectedTransaction(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(OverViewComponent, {\n      expense: expense,\n      income: income,\n      addTransaction: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), (transactions === null || transactions === void 0 ? void 0 : transactions.length) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TransactionsComponent, {\n        transactions: transactions,\n        onDelete: handleDeleteTransaction,\n        onEdit: handleEditTransaction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Income and Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MyPieChart, {\n            data: [{\n              name: \"Income\",\n              value: income\n            }, {\n              name: \"Expense\",\n              value: expense\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChartContainer, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Expenses (excluding Salary)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(TransactionsChart, {\n            data: expenseTransactions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HomeComponent, \"L0kCrzqUEVDbeKKs5kPLm9f+k0w=\");\n\n_c3 = HomeComponent;\nexport default HomeComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"HomeComponent\");","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/src/modules/home/index.js"],"names":["React","useEffect","useState","useCallback","styled","OverViewComponent","TransactionsComponent","MyPieChart","TransactionsChart","Container","div","ChartContainer","HomeComponent","props","transactions","updateTransaction","expense","updateExpense","income","updateIncome","setSelectedTransaction","calculateBalance","exp","inc","forEach","payload","type","amount","addTransaction","transactionArray","now","Date","date","toLocaleDateString","time","toLocaleTimeString","push","expenseTransactions","filter","transaction","handleDeleteTransaction","transactionId","updatedTransactions","id","handleEditTransaction","handleSaveEdit","editedTransaction","index","findIndex","length","display","justifyContent","name","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport OverViewComponent from \"./OverViewComponent\";\nimport TransactionsComponent from \"./TransactionsComponent\";\nimport MyPieChart from \"./Components\"; // Import the PieChart component\nimport TransactionsChart from \"./TransactionsChart\";\n\nconst Container = styled.div`\n  background-color: white;\n  color: #0d1d2c;\n  display: flex;\n  flex-direction: column;\n  padding: 10px 22px;\n  font-size: 18px;\n  width: 360px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ChartContainer = styled.div`\n  margin-top: 20px;\n  width: 100%;\n`;\n\nconst HomeComponent = (props) => {\n  const [transactions, updateTransaction] = useState([]);\n  const [expense, updateExpense] = useState(0);\n  const [income, updateIncome] = useState(0);\n  const [setSelectedTransaction] = useState(null);\n\n  const calculateBalance = useCallback(() => {\n    let exp = 0;\n    let inc = 0;\n    transactions.forEach((payload) =>\n      payload.type === \"EXPENSE\"\n        ? (exp = exp + payload.amount)\n        : (inc = inc + payload.amount)\n    );\n    updateExpense(exp);\n    updateIncome(inc);\n  }, [transactions]);\n\n  useEffect(() => {\n    calculateBalance();\n  }, [transactions, calculateBalance]);\n\n  const addTransaction = (payload) => {\n    const transactionArray = [...transactions];\n    const now = new Date();\n    payload.date = now.toLocaleDateString();\n    payload.time = now.toLocaleTimeString();\n    transactionArray.push(payload);\n    updateTransaction(transactionArray);\n  };\n  \n  const expenseTransactions = transactions.filter(\n    (transaction) => transaction.type === \"EXPENSE\"\n  );\n\n  const handleDeleteTransaction = (transactionId) => {\n    // Filter out the transaction with the given id\n    const updatedTransactions = transactions.filter(\n      (transaction) => transaction.id !== transactionId\n    );\n\n    // Update the state with the new transactions\n    updateTransaction(updatedTransactions);\n  };\n\n  const handleEditTransaction = (transaction) => {\n    // Set the selected transaction for editing\n    setSelectedTransaction(transaction);\n  };\n\n  const handleSaveEdit = (editedTransaction) => {\n    // Find the index of the edited transaction\n    const index = transactions.findIndex(\n      (transaction) => transaction.id === editedTransaction.id\n    );\n\n    // Update the transactions array with the edited transaction\n    const updatedTransactions = [...transactions];\n    updatedTransactions[index] = editedTransaction;\n\n    // Update the state with the new transactions and reset selectedTransaction\n    updateTransaction(updatedTransactions);\n    setSelectedTransaction(null);\n  };\n\n\n  return (\n    <Container>\n      <OverViewComponent\n        expense={expense}\n        income={income}\n        addTransaction={addTransaction}\n      />\n      {transactions?.length ? (\n        <div>\n          <TransactionsComponent \n          transactions={transactions}\n          onDelete={handleDeleteTransaction}\n          onEdit={handleEditTransaction}\n          />\n          <ChartContainer>\n            <h2>Income and Expense</h2>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <MyPieChart data={[\n                { name: \"Income\", value: income },\n                { name: \"Expense\", value: expense }\n              ]} />\n            </div>\n          </ChartContainer>\n          <ChartContainer>\n            <h2>Expenses (excluding Salary)</h2>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <TransactionsChart data={expenseTransactions} />\n            </div>\n          </ChartContainer>\n        </div>\n      ) : (\n        \"\"\n      )}\n    </Container>\n  );\n};\n\nexport default HomeComponent;"]},"metadata":{},"sourceType":"module"}