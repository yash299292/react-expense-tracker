{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Adder = void 0;\nexports.fcumsum = fcumsum;\nexports.fsum = fsum; // https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\n\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n            hi = x + y,\n            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n\n  valueOf() {\n    const p = this._partials;\n    let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n\n    if (n > 0) {\n      hi = p[--n];\n\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n\n      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n\n    return hi;\n  }\n\n}\n\nexports.Adder = Adder;\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n}","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/node_modules/victory-vendor/lib-vendor/d3-array/src/fsum.js"],"names":["Object","defineProperty","exports","value","Adder","fcumsum","fsum","constructor","_partials","Float64Array","_n","add","x","p","i","j","y","hi","lo","Math","abs","valueOf","n","values","valueof","adder","undefined","index","from","v"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Adder = void 0;\nexports.fcumsum = fcumsum;\nexports.fsum = fsum;\n\n// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nclass Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n            hi = x + y,\n            lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n\n  valueOf() {\n    const p = this._partials;\n    let n = this._n,\n        x,\n        y,\n        lo,\n        hi = 0;\n\n    if (n > 0) {\n      hi = p[--n];\n\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n\n      if (n > 0 && (lo < 0 && p[n - 1] < 0 || lo > 0 && p[n - 1] > 0)) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n\n    return hi;\n  }\n\n}\n\nexports.Adder = Adder;\n\nfunction fsum(values, valueof) {\n  const adder = new Adder();\n\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n\n  return +adder;\n}\n\nfunction fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined ? v => adder.add(+v || 0) : v => adder.add(+valueof(v, ++index, values) || 0));\n}"]},"metadata":{},"sourceType":"script"}