{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.formatDecimalParts = formatDecimalParts;\n\nfunction _default(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n} // Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\n\n\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}","map":{"version":3,"sources":["/Users/nonijoysar/Desktop/react-expense-tracker/node_modules/victory-vendor/lib-vendor/d3-format/src/formatDecimal.js"],"names":["Object","defineProperty","exports","value","default","_default","formatDecimalParts","x","Math","abs","round","toLocaleString","replace","toString","p","i","toExponential","indexOf","coefficient","slice","length"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,QAAlB;AACAH,OAAO,CAACI,kBAAR,GAA6BA,kBAA7B;;AAEA,SAASD,QAAT,CAAkBE,CAAlB,EAAqB;AACnB,SAAOC,IAAI,CAACC,GAAL,CAASF,CAAC,GAAGC,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAb,KAA+B,IAA/B,GAAsCA,CAAC,CAACI,cAAF,CAAiB,IAAjB,EAAuBC,OAAvB,CAA+B,IAA/B,EAAqC,EAArC,CAAtC,GAAiFL,CAAC,CAACM,QAAF,CAAW,EAAX,CAAxF;AACD,C,CAAC;AACF;AACA;;;AAGA,SAASP,kBAAT,CAA4BC,CAA5B,EAA+BO,CAA/B,EAAkC;AAChC,MAAI,CAACC,CAAC,GAAG,CAACR,CAAC,GAAGO,CAAC,GAAGP,CAAC,CAACS,aAAF,CAAgBF,CAAC,GAAG,CAApB,CAAH,GAA4BP,CAAC,CAACS,aAAF,EAAlC,EAAqDC,OAArD,CAA6D,GAA7D,CAAL,IAA0E,CAA9E,EAAiF,OAAO,IAAP,CADjD,CAC8D;;AAE9F,MAAIF,CAAJ;AAAA,MACIG,WAAW,GAAGX,CAAC,CAACY,KAAF,CAAQ,CAAR,EAAWJ,CAAX,CADlB,CAHgC,CAIC;AACjC;;AAEA,SAAO,CAACG,WAAW,CAACE,MAAZ,GAAqB,CAArB,GAAyBF,WAAW,CAAC,CAAD,CAAX,GAAiBA,WAAW,CAACC,KAAZ,CAAkB,CAAlB,CAA1C,GAAiED,WAAlE,EAA+E,CAACX,CAAC,CAACY,KAAF,CAAQJ,CAAC,GAAG,CAAZ,CAAhF,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.formatDecimalParts = formatDecimalParts;\n\nfunction _default(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString(\"en\").replace(/,/g, \"\") : x.toString(10);\n} // Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\n\n\nfunction formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n\n  var i,\n      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n\n  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];\n}"]},"metadata":{},"sourceType":"script"}